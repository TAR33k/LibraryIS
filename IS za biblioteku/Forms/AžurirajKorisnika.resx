<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SgAAAABJRU5ErkJggg==
</value>
  </data>
</root>