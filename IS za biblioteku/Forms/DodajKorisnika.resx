<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAUAAAAFACAYAAADNkKWqAAAABGdBTUEAALGPC/xhBQAADgJJREFUeF7t
        3euV47qZBdAbyoTiUBzKZOJQHIpD8fSxm7ZuDeohiQA+AHuvdX603V0PSjzEg9T9AwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAuNH//M5fHvLXD3++/k4CsJQUWvK33/nHr/zzjeTf//1X8rX+91ce
        SxJgmpTQVXbvFt0rSTE+liJAVzML77tchagMgdtcpdcqnapJGebnVobA0zKtrDrSezYpQ9Nk4FspihRG
        q0hWj1Eh0JRi2LX4PiajWkUIbD3i+y6KEA622sZGr+QCoAThEBn1tIrg9OSCoAhhUzm5T53u/jTXtBjY
        SNb6Wie8tOOGatiEUd9rsTYICzPlvSemxLAYU957Y0oMi7DL2yemxFBcRiqtk1fuiRKEoqz3jUlulVGC
        UIjyGxslCEUovzlRgjCZ8psbJQiT+DCDGlGCMJjd3lqxOwyDuM+vZtwsDZ15wqN2UoJABxldtE46qRUl
        CB2svuObnz8bN0lKIlP5K/lz/vf8nSQbC0nr66wQU2G4UQqidaJVTcosxXZHEWTan6+3UiHaGYabrLLu
        d5VeTzkWuRisUIamwvCm6ut+ma6mlGZYYWSoBOENVae+M4vvo1wkqhahqTC8qOLUNyd0leL7KD9Xirn1
        c8+MUSC8oNqIpvf63l0qFqFRIDyh0tQ3ZbKiasdQCcIPVNr4WLX8LinBKiNpU2H4gSojl11O2EyJK5Sg
        DRH4RpXRX9WNjlfluFYoQaNA+MLs0V9KYrfye5TbZVq/96gYBcInZo/+cnKeYHYJrrKbDkPNHv3tPPL7
        aOZ02CgQPpg9+jup/GL2mqBRIDyYOfo7dWF+ZgmufnsR3GrWkwunn4gzLzymwfDLrOnvKZse35lVgqbB
        8MusE9AI5L9mTIVNg+GXGSffqet+n8kmUOs49Y6LEEebMf019W2bcX+gCxFHmzH9ddK15WI0ejRuGszR
        Ru/+Gv19bcYFyTSYY7VOiJ4x+vvajFHgaTehw7+MXv8z+vuZ0aNAFyWO5ESrafSFyTogRxpdgNaafm70
        NNhrw3FGnmSmv89xcYLOWidCr5j+Pmf0jdEei+Moo9eZ7DQ+b+QIXQFylJEjDNPf14x8MiTfC44xco3J
        9Pc1GZW1jmeP2AnmKApwDa3j2SNG6Rxl5CNw1v9eN3IdEI6hANcwsgDdCsMxRhagE+t1XifowNRqDSN3
        ghUgxxhVgBbX3zOyAC1VcAwFuIaRu/UKkGO0ToAecX/Ze0beC6gAOUbrBOgRTxi8Z2QBehyOY4yaAhsB
        vscUGDqwBrgGBQgdjCrAhNfZBYYORhag+8te50Zo6MCJtQavE3Qw8sQytXpd63j2Chxj5NqS2yte1zqe
        vQLHGLm7qABfkylp63j2iN16jjLyBlv3Ar5m5EXKa8RRsi7XOhF6xQL780au06Zs4SitE6FXTIOfM3L6
        myhAjjPyXkDPBD9n9AjdTj3HGVmAiWnwz41c/0vgOCNvhUkU4M+1jl+v2AHmSCN3ghPrTD8zev3P8gTH
        ap0QPWMU+L2Ru7+JCxPHGr0O6GT72ujRX2IDhGONXgdMjAI/N3r0Z/2Po41eB0yMAttG3/qSeAKE442e
        BidGgf/fjNfBxYjjzZgGG3n8WYqodZx6B443YxqcWHz/txkbH4nbX+C3GdOvxFR4/MbHFc9nw28zpsFJ
        ivfkEpx53IHfZuxAXskI6MQSnLXul9j8gA9mTYOT007ImRecxNIDfDBzRJKcUoKzNj2u2IGHT8wcBSa7
        L8yn/GYfY6M/+MTsUWCy60hw9rQ3sfkB35g9QklSgjuNVCqUX+LWF/hGhVFgssvucJXjafQHP1RhFJjk
        51i5BGfd5NyKJ2/gh6pM2a6sNnVLaVcqv13XVaGbWU8pfJZVpsTVjpupL7wgZVNlKvyYFEzFIqyy1vcx
        Rn/woqondVKlCDM9r3ihSIz+4E1VT+4rKemsWY4uwxRfpXW+Vmx8wJuqToVbSSH1KsMUXkadqxwL9/zB
        TSpPhT9LyvAaHV6l+JNizN/J30+BrFZ6V/IzAzdasQQ/SwotBXklf16t5D5Lfg+gg11KYudY94NOVloP
        PDHKDzpTgjVj0wMGyUhDCdZJ1meBgXLSKcH5seMLk+y0M7xisoMNTKQE50T5QRGmw2Oj/KCY7EIqwf6x
        5gdF2R3uG7u9UJz7BPvEfX6wCCV4bzzhAQuyQ/xestmRiwmwKOuCr8V6H2zClPi5mPLChtwv+HVyi4sp
        L2wsJ3hO9FYBnJpcFIz64CDWBv8da31wsFOfIDHdBf7jlCJUfMCndi3CTHUVH/AjWSPMaGnlMszP7xE2
        4C0pw+s/X9kqmkrJz5nSM9oDbldxZHiN9JQeMEwKJ4WY9bVRI8R8D4UHlHSVYgrqKsYrKa/HPJbalevv
        puSuosvXU3YAAAAAAAAAAAAAAAAAAAAAAM+6PhHm+lSYK/l0mOT6pJfHXP/flevfXJ8E49NggDJSSFep
        pcA+fsRVrzx+XFa+t4/KArpK0V0jtREl92pSjFcpKkbgJVfhVS67n+YqRWUINO1UeN8lhZjfVyHCwVIC
        KYNWSZyS/P6ZKgMHuEZ6rTI4OTkmRoSwqayBnTC9fSc5PkoQNmGK+3yUICwuo73WyS0/ixKEBVnbuy+5
        iAALUHx9YhQIReXkVHx9YxQIBSm+cak8Crwe97se+TNiZWvZ1W2dpNIvlW6Szs+Si99XtzN5yoXt5I3v
        dpY5SZnM9srrn5JUhCzPdHducvxneveWphSnEmQ5uXp/NdWRMZlZgHeN+t3XyDLyRjXdrZNZBXj3zexK
        kPKy1tN688q8zLgVptf7wG09lHX3FV/uScpotJ5LH0aBlGLKWzuj9b4Q5r0GJZjy1s6MKeOIjS+jQKYz
        6quf0UWR79f6Oe5OhXsbOZQp7xqZsfs7ah3YNJgpRl3h5b1kGjrDqAKc9ftxMOt9ayTlMGPnN0Y+9QPD
        nFZ+mWLlZM6IJutNSY5BklHwlUf58/V3rn+Tf5/ka+VrJr03CfL9Z1GAbCcnVOsNuEMeS65Var1cZZnv
        fVcpVlgXU4BsJSdo6823aq7CmzlK+syrhZjfqcrvowDZxsg3c8/k9xg1srvTx1HiY/I7XaPWShQgW8hJ
        1nrTrZKciBVHebtTgCxv5Jv4zlyjIuZRgCxtxTW/nHQrTnF3pABZVkZPrTda1aSsqUUBsqSsl7XeZBVj
        mluXAmQ5q5SfEV99CpClZO2s9eaqlOxIW+NbgwJkGdXLb+YzrbxGAbKElF/vZ1LfienumhQgS6h6o7NR
        39oUIOVVvd0lpczaFCClVV33M+rbgwKktGrrfqa8e1GAlFVt3c+Udz8KkJKqrfvZ5d2TAqScaut+HmXb
        lwKknErrftb79qYAKaXSx1spv/0pQMqoMvW103sOBUgZFXZ9ld9ZFCAlpHRab5rRUX5nUYCUUGHjQ/md
        RwEyXYWND+VXQ16H3HY0KiOXXVrfv0dyDJOsqScUVmHjI28a5siJmlFYpVufdktKPu9xZVjQ7I0PT3jM
        keKrsOl1UnKRUYSF5CRovVCjkpEH41W61/PE5MKjBAuYOe3J92Y8o74ayftfCU40c+3Piz+HkV+tOA8m
        mjkSyNSbsWYvd0g71sAnmDn684LPMXO5Q76OUeBgI28+fUxGnYxn6ls7zouBZo3+bHrMY/RXP0aBg8wa
        /Zn6zjFzuUN+Hg8DDGD0dx7T3zViGjzArJPBru88CnCNGCQM0DrwvWPqO9esJQ95PnQ0YyTgqjafAlwj
        zpXOZpwIFnbnU4BrRAF2NGPzwwtaQy5CrddHasUmSEczpr9GfzV4BG6NWCvvKKOx1kHvFaO/Wka//vJ8
        3AjdyYzpr9FfLW6FqR0Dho5Gv/m9mDUZBdaN+2Q7ah3wnrGWUZNRYM3Y/Oho9PTX6K82JVgrzpfORr/h
        jf7qc19gjaT8bHx0luF16+D3CmvIhcqa4LyY9g5g+stXsvA++gIp7pAYZvQNsKa/a8r7JNNiI8J+yfFV
        fIONXv9jfZk1pBCTnLAjMnIU2vr+vZJjaI1vopFvLGsavGrkpgyHGL3+lysevEIBcruR6382P3iHAuR2
        I9f/TH95hwLkdiPX/+z+8g4FyO1aL36vZLoNr1KA3Gr0Bgi8QwFyKxsgrEQBcquRGyDW/3iXAuRWIwvQ
        +h/vUoDcauQOMLxLAXKr1gvfI9b/uIMC5DYzHoGT55OlgySv1+kPzCtAbjO6AOWeZNkixXhiGSpAbpOT
        qPXCyxrJssJpRagAuc3IHWDpl4wITylBBchtFOA+yWjwhBJUgNxm5JtJ+ueEElSA3EYB7pfdn7ZRgNxG
        Ae6ZnUeBCpDbjHwKRMYlr+uuFCC3UYD7ZtdRoALkNlk0b73wsn5yf+COFCC3UYD7ZtdpsALkNq0XXfZI
        Lm47UoDcpvWiyz7ZkQLkNqbA+8YI8L3sevx4oAD3jQJ8LwrwAG6D2Te7boKM+gSjne+l5DcfhrBvdn0k
        btR/xXD3Rwr5ZeR/ElPGZufH4UYs3ZzwyTr8Yh1wv+y+ftV75mL97yBGgfslr+nuel64Tzh+PBh5b5X0
        zSmL971GgTY/DmUqvH5Om7rdXYKmvgfLoq8SXDd57U5cuL9r9nLq8eMD9waul9OnbRkJvnPxNu3lT3Kz
        qdHgGtn1Y6+elY2LVy7ejh+fypsjbyplWCuZ9jlx21KEOT5fvWcdP56WN1aSN46MT469Narn5Hhd71vH
        DwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEv744/8AVA3E6bNGz1cAAAAASUVORK5CYII=
</value>
  </data>
</root>